// Generated by view binder compiler. Do not edit!
package it.feio.android.omninotes.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import it.feio.android.omninotes.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCategoryBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText categoryDescription;

  @NonNull
  public final EditText categoryTitle;

  @NonNull
  public final ImageView colorChooser;

  @NonNull
  public final Button delete;

  @NonNull
  public final Button save;

  private ActivityCategoryBinding(@NonNull LinearLayout rootView,
      @NonNull EditText categoryDescription, @NonNull EditText categoryTitle,
      @NonNull ImageView colorChooser, @NonNull Button delete, @NonNull Button save) {
    this.rootView = rootView;
    this.categoryDescription = categoryDescription;
    this.categoryTitle = categoryTitle;
    this.colorChooser = colorChooser;
    this.delete = delete;
    this.save = save;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCategoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCategoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_category, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCategoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.category_description;
      EditText categoryDescription = ViewBindings.findChildViewById(rootView, id);
      if (categoryDescription == null) {
        break missingId;
      }

      id = R.id.category_title;
      EditText categoryTitle = ViewBindings.findChildViewById(rootView, id);
      if (categoryTitle == null) {
        break missingId;
      }

      id = R.id.color_chooser;
      ImageView colorChooser = ViewBindings.findChildViewById(rootView, id);
      if (colorChooser == null) {
        break missingId;
      }

      id = R.id.delete;
      Button delete = ViewBindings.findChildViewById(rootView, id);
      if (delete == null) {
        break missingId;
      }

      id = R.id.save;
      Button save = ViewBindings.findChildViewById(rootView, id);
      if (save == null) {
        break missingId;
      }

      return new ActivityCategoryBinding((LinearLayout) rootView, categoryDescription,
          categoryTitle, colorChooser, delete, save);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
