// Generated by view binder compiler. Do not edit!
package it.feio.android.omninotes.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewStub;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.neopixl.pixlui.components.edittext.EditText;
import com.neopixl.pixlui.components.textview.TextView;
import it.feio.android.omninotes.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDetailBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ScrollView contentWrapper;

  @NonNull
  public final TextView creation;

  @NonNull
  public final ViewStub detailAttachmentsAbove;

  @NonNull
  public final ViewStub detailAttachmentsBelow;

  @NonNull
  public final CoordinatorLayout detailContentCard;

  @NonNull
  public final LinearLayout detailRoot;

  @NonNull
  public final LinearLayout detailTileCard;

  @NonNull
  public final LinearLayout detailTimestamps;

  @NonNull
  public final EditText detailTitle;

  @NonNull
  public final LinearLayout detailWrapper;

  @NonNull
  public final FragmentDetailContentBinding fragmentDetailContent;

  @NonNull
  public final TextView lastModification;

  @NonNull
  public final CoordinatorLayout snackbarPlaceholder;

  @NonNull
  public final View tagMarker;

  @NonNull
  public final LinearLayout titleWrapper;

  private FragmentDetailBinding(@NonNull RelativeLayout rootView,
      @NonNull ScrollView contentWrapper, @NonNull TextView creation,
      @NonNull ViewStub detailAttachmentsAbove, @NonNull ViewStub detailAttachmentsBelow,
      @NonNull CoordinatorLayout detailContentCard, @NonNull LinearLayout detailRoot,
      @NonNull LinearLayout detailTileCard, @NonNull LinearLayout detailTimestamps,
      @NonNull EditText detailTitle, @NonNull LinearLayout detailWrapper,
      @NonNull FragmentDetailContentBinding fragmentDetailContent,
      @NonNull TextView lastModification, @NonNull CoordinatorLayout snackbarPlaceholder,
      @NonNull View tagMarker, @NonNull LinearLayout titleWrapper) {
    this.rootView = rootView;
    this.contentWrapper = contentWrapper;
    this.creation = creation;
    this.detailAttachmentsAbove = detailAttachmentsAbove;
    this.detailAttachmentsBelow = detailAttachmentsBelow;
    this.detailContentCard = detailContentCard;
    this.detailRoot = detailRoot;
    this.detailTileCard = detailTileCard;
    this.detailTimestamps = detailTimestamps;
    this.detailTitle = detailTitle;
    this.detailWrapper = detailWrapper;
    this.fragmentDetailContent = fragmentDetailContent;
    this.lastModification = lastModification;
    this.snackbarPlaceholder = snackbarPlaceholder;
    this.tagMarker = tagMarker;
    this.titleWrapper = titleWrapper;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.content_wrapper;
      ScrollView contentWrapper = ViewBindings.findChildViewById(rootView, id);
      if (contentWrapper == null) {
        break missingId;
      }

      id = R.id.creation;
      TextView creation = ViewBindings.findChildViewById(rootView, id);
      if (creation == null) {
        break missingId;
      }

      id = R.id.detail_attachments_above;
      ViewStub detailAttachmentsAbove = ViewBindings.findChildViewById(rootView, id);
      if (detailAttachmentsAbove == null) {
        break missingId;
      }

      id = R.id.detail_attachments_below;
      ViewStub detailAttachmentsBelow = ViewBindings.findChildViewById(rootView, id);
      if (detailAttachmentsBelow == null) {
        break missingId;
      }

      id = R.id.detail_content_card;
      CoordinatorLayout detailContentCard = ViewBindings.findChildViewById(rootView, id);
      if (detailContentCard == null) {
        break missingId;
      }

      id = R.id.detail_root;
      LinearLayout detailRoot = ViewBindings.findChildViewById(rootView, id);
      if (detailRoot == null) {
        break missingId;
      }

      id = R.id.detail_tile_card;
      LinearLayout detailTileCard = ViewBindings.findChildViewById(rootView, id);
      if (detailTileCard == null) {
        break missingId;
      }

      id = R.id.detail_timestamps;
      LinearLayout detailTimestamps = ViewBindings.findChildViewById(rootView, id);
      if (detailTimestamps == null) {
        break missingId;
      }

      id = R.id.detail_title;
      EditText detailTitle = ViewBindings.findChildViewById(rootView, id);
      if (detailTitle == null) {
        break missingId;
      }

      id = R.id.detail_wrapper;
      LinearLayout detailWrapper = ViewBindings.findChildViewById(rootView, id);
      if (detailWrapper == null) {
        break missingId;
      }

      id = R.id.fragment_detail_content;
      View fragmentDetailContent = ViewBindings.findChildViewById(rootView, id);
      if (fragmentDetailContent == null) {
        break missingId;
      }
      FragmentDetailContentBinding binding_fragmentDetailContent = FragmentDetailContentBinding.bind(fragmentDetailContent);

      id = R.id.last_modification;
      TextView lastModification = ViewBindings.findChildViewById(rootView, id);
      if (lastModification == null) {
        break missingId;
      }

      id = R.id.snackbar_placeholder;
      CoordinatorLayout snackbarPlaceholder = ViewBindings.findChildViewById(rootView, id);
      if (snackbarPlaceholder == null) {
        break missingId;
      }

      id = R.id.tag_marker;
      View tagMarker = ViewBindings.findChildViewById(rootView, id);
      if (tagMarker == null) {
        break missingId;
      }

      id = R.id.title_wrapper;
      LinearLayout titleWrapper = ViewBindings.findChildViewById(rootView, id);
      if (titleWrapper == null) {
        break missingId;
      }

      return new FragmentDetailBinding((RelativeLayout) rootView, contentWrapper, creation,
          detailAttachmentsAbove, detailAttachmentsBelow, detailContentCard, detailRoot,
          detailTileCard, detailTimestamps, detailTitle, detailWrapper,
          binding_fragmentDetailContent, lastModification, snackbarPlaceholder, tagMarker,
          titleWrapper);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
