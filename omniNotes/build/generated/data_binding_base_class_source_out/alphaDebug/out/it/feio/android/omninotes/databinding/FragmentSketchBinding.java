// Generated by view binder compiler. Do not edit!
package it.feio.android.omninotes.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import it.feio.android.omninotes.R;
import it.feio.android.omninotes.models.views.SketchView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSketchBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final SketchView drawing;

  @NonNull
  public final LinearLayout drawingQuestion;

  @NonNull
  public final LinearLayout eraserView;

  @NonNull
  public final ImageView sketchErase;

  @NonNull
  public final ImageView sketchEraser;

  @NonNull
  public final ImageView sketchRedo;

  @NonNull
  public final ImageView sketchStroke;

  @NonNull
  public final ImageView sketchUndo;

  private FragmentSketchBinding(@NonNull FrameLayout rootView, @NonNull SketchView drawing,
      @NonNull LinearLayout drawingQuestion, @NonNull LinearLayout eraserView,
      @NonNull ImageView sketchErase, @NonNull ImageView sketchEraser,
      @NonNull ImageView sketchRedo, @NonNull ImageView sketchStroke,
      @NonNull ImageView sketchUndo) {
    this.rootView = rootView;
    this.drawing = drawing;
    this.drawingQuestion = drawingQuestion;
    this.eraserView = eraserView;
    this.sketchErase = sketchErase;
    this.sketchEraser = sketchEraser;
    this.sketchRedo = sketchRedo;
    this.sketchStroke = sketchStroke;
    this.sketchUndo = sketchUndo;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSketchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSketchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_sketch, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSketchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.drawing;
      SketchView drawing = ViewBindings.findChildViewById(rootView, id);
      if (drawing == null) {
        break missingId;
      }

      id = R.id.drawing_question;
      LinearLayout drawingQuestion = ViewBindings.findChildViewById(rootView, id);
      if (drawingQuestion == null) {
        break missingId;
      }

      id = R.id.eraserView;
      LinearLayout eraserView = ViewBindings.findChildViewById(rootView, id);
      if (eraserView == null) {
        break missingId;
      }

      id = R.id.sketch_erase;
      ImageView sketchErase = ViewBindings.findChildViewById(rootView, id);
      if (sketchErase == null) {
        break missingId;
      }

      id = R.id.sketch_eraser;
      ImageView sketchEraser = ViewBindings.findChildViewById(rootView, id);
      if (sketchEraser == null) {
        break missingId;
      }

      id = R.id.sketch_redo;
      ImageView sketchRedo = ViewBindings.findChildViewById(rootView, id);
      if (sketchRedo == null) {
        break missingId;
      }

      id = R.id.sketch_stroke;
      ImageView sketchStroke = ViewBindings.findChildViewById(rootView, id);
      if (sketchStroke == null) {
        break missingId;
      }

      id = R.id.sketch_undo;
      ImageView sketchUndo = ViewBindings.findChildViewById(rootView, id);
      if (sketchUndo == null) {
        break missingId;
      }

      return new FragmentSketchBinding((FrameLayout) rootView, drawing, drawingQuestion, eraserView,
          sketchErase, sketchEraser, sketchRedo, sketchStroke, sketchUndo);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
