// Generated by view binder compiler. Do not edit!
package it.feio.android.omninotes.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.neopixl.pixlui.components.textview.TextView;
import it.feio.android.omninotes.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AttachmentDialogBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout attachmentDialogRoot;

  @NonNull
  public final TextView camera;

  @NonNull
  public final TextView files;

  @NonNull
  public final TextView location;

  @NonNull
  public final TextView pushbullet;

  @NonNull
  public final TextView recording;

  @NonNull
  public final TextView sketch;

  @NonNull
  public final TextView timestamp;

  @NonNull
  public final TextView video;

  private AttachmentDialogBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout attachmentDialogRoot, @NonNull TextView camera, @NonNull TextView files,
      @NonNull TextView location, @NonNull TextView pushbullet, @NonNull TextView recording,
      @NonNull TextView sketch, @NonNull TextView timestamp, @NonNull TextView video) {
    this.rootView = rootView;
    this.attachmentDialogRoot = attachmentDialogRoot;
    this.camera = camera;
    this.files = files;
    this.location = location;
    this.pushbullet = pushbullet;
    this.recording = recording;
    this.sketch = sketch;
    this.timestamp = timestamp;
    this.video = video;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AttachmentDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AttachmentDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.attachment_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AttachmentDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      LinearLayout attachmentDialogRoot = (LinearLayout) rootView;

      id = R.id.camera;
      TextView camera = ViewBindings.findChildViewById(rootView, id);
      if (camera == null) {
        break missingId;
      }

      id = R.id.files;
      TextView files = ViewBindings.findChildViewById(rootView, id);
      if (files == null) {
        break missingId;
      }

      id = R.id.location;
      TextView location = ViewBindings.findChildViewById(rootView, id);
      if (location == null) {
        break missingId;
      }

      id = R.id.pushbullet;
      TextView pushbullet = ViewBindings.findChildViewById(rootView, id);
      if (pushbullet == null) {
        break missingId;
      }

      id = R.id.recording;
      TextView recording = ViewBindings.findChildViewById(rootView, id);
      if (recording == null) {
        break missingId;
      }

      id = R.id.sketch;
      TextView sketch = ViewBindings.findChildViewById(rootView, id);
      if (sketch == null) {
        break missingId;
      }

      id = R.id.timestamp;
      TextView timestamp = ViewBindings.findChildViewById(rootView, id);
      if (timestamp == null) {
        break missingId;
      }

      id = R.id.video;
      TextView video = ViewBindings.findChildViewById(rootView, id);
      if (video == null) {
        break missingId;
      }

      return new AttachmentDialogBinding((LinearLayout) rootView, attachmentDialogRoot, camera,
          files, location, pushbullet, recording, sketch, timestamp, video);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
